events {
  worker_connections 1024;
}

http {
server {
  listen 80;
  server_name chronos-alert.com;

  location / {
    # Nginx vai encaminhar as requisições para a aplicação na porta 3000
    proxy_pass http://localhost:3000;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  # Configuração de autenticação Keycloak
  location /auth/ {
    proxy_pass http://keycloak:8080/auth/;  
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }
}

}


# HTTP
# events {
#   worker_connections 1024;
# }

# http {
#   server {
#     listen 80;
#     server_name mywebsite.com;

#     location /auth/ {
#       proxy_pass http://keycloak:8080/auth/;
#       proxy_set_header Host $host;
#       proxy_set_header X-Real-IP $remote_addr;
#       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#       proxy_set_header X-Forwarded-Proto $scheme;

#       rewrite ^/auth/(.*) /auth/$1 break;
#     }
#   }
# }

# HTTPS CONFIG:
# events {
#   worker_connections 1024;
# }

# http {
#   server {
#     listen 80;
#     server_name mywebsite.com;

#     # Redirecionar todo tráfego HTTP para HTTPS
#     return 301 https://$host$request_uri;
#   }

#   server {
#     listen 443 ssl;
#     server_name mywebsite.com;

#     ssl_certificate /etc/nginx/certificates/keycloak.crt;
#     ssl_certificate_key /etc/nginx/certificates/keycloak.key;

#     location /auth/ {
#       proxy_pass http://keycloak:8080/auth/;
#       proxy_set_header Host $host;
#       proxy_set_header X-Real-IP $remote_addr;
#       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#       proxy_set_header X-Forwarded-Proto $scheme;
#     }
#   }
# }
